(()=>{"use strict";var __webpack_modules__={794:()=>{eval('\n;// CONCATENATED MODULE: ./src/obj.js\nlet myProjects = [];\nlet myTasks = [];\n\nfunction changeMyTasks(obj) {\n  myTasks = obj;\n}\n\nfunction changeMyProjects(obj) {\n  myProjects = obj;\n}\n\nfunction updateMyTasks(obj) {\n  myTasks.push(obj);\n}\n\nfunction updateMyProjects(obj) {\n  myProjects.push(obj);\n}\n\n\n\n;// CONCATENATED MODULE: ./src/applogic.js\n/*\n\n1. createProject: \n2. deleteProject\n\n*/\n\n\n\n\nlet count = 0;\n\nconst counts = () => {\n  count++;\n  return count;\n};\n\nclass Task {\n  constructor(projectId, taskTitle, description, notes) {\n    this.projectId = projectId;\n    this.taskId = counts();\n    this.taskTitle = taskTitle;\n    this.description = description;\n    this.notes = notes;\n  }\n}\n\nconst createTask = (e) => {\n  e.preventDefault();\n  const taskTitle = document.getElementById("task-title").value;\n  const description = document.getElementById("task-description").value;\n  const notes = document.getElementById("task-notes").value;\n  const selectedProject = document.querySelector(".highlight");\n  const projectId = selectedProject.getAttribute("id");\n\n  const thisTask = new Task(projectId, taskTitle, description, notes);\n  updateMyTasks(thisTask);\n  console.log(myTasks);\n  //   appLogic.myTasks.push(thisTask);\n};\n\nconst deleteTask = (taskIconId) => {\n  const arr = myTasks.filter((task) => taskIconId != task.taskId);\n  changeMyTasks(arr);\n};\n\nconst deleteProject = (elemId) => {\n  // delete projects from myProjects that match projectId\n  const arr = myProjects.filter((project) => elemId != project.id);\n  changeMyProjects(arr);\n  // delete tasks (with projectId) from myTasks array\n  const arr2 = myTasks.filter((tasks) => elemId != tasks.projectId);\n  changeMyTasks(arr2);\n};\n\nfunction Project(id, title) {\n  this.id = id;\n  this.title = title;\n  //   return { id: id, title: varTitle };\n}\n\nconst createProject = (e) => {\n  // pushes project to myProjects and updateProjectDisplay()\n  e.preventDefault();\n  const userInputField = document.getElementById("project-name");\n  const projectName = userInputField.value;\n  const tempCounts = counts();\n  const thisProjectId = tempCounts;\n  const thisProject = new Project(thisProjectId, projectName);\n  updateMyProjects(thisProject);\n  console.log(myProjects);\n};\n\n\n\n;// CONCATENATED MODULE: ./src/dom.js\n/*\nFunctions:\n\n1. changeDisplayType(displayType,[elementId...])\n\n2. updateProjectsDisplay(myProjects): Renders display for projects. First sets innerHTML to blank, then loops through each element of the array.\n\n3. updateTasksDisplay(projectId): Renders display for tasks of element in myProjects with projectId of projectId. First sets innerHTML to blank, then loops through each element of the array.\n\n*/\n\n\n\n\nconst changeDisplayType = (displayType, ...ElementId) => {\n  const arr = ElementId;\n  const id1 = arr[0][0];\n  const id2 = arr[0][1];\n  const element1 = document.querySelector(`#${id1}`);\n  const element2 = document.querySelector(`#${id2}`);\n  element1.style.display = displayType;\n  element2.style.display = displayType;\n};\n\nconst addEventListenerToTaskTrashIcons = () => {\n  const targetDivs = document.querySelectorAll(".task-icon-trash");\n\n  targetDivs.forEach((element) =>\n    element.addEventListener("click", (e) => {\n      const target = e.target;\n      const taskId = target.getAttribute("data-taskid");\n      deleteTask(taskId);\n      updateTasksDisplay(myTasks);\n    })\n  );\n};\n\nconst updateTasksDisplay = (arr) => {\n  const tasksContainer = document.getElementById("tasks-container");\n  tasksContainer.innerHTML = "";\n  const selectedProject = document.querySelector(".highlight");\n\n  arr.forEach((task) => {\n    if (selectedProject && task.projectId == selectedProject.id) {\n      const container = document.getElementById("tasks-container");\n      const divTask = document.createElement("div");\n\n      divTask.classList.add("task");\n      divTask.setAttribute("id", task.taskId);\n      divTask.innerHTML = `<div class="task-title">Task title: ${task.taskTitle}</div>\n    <div class="task-description">Task description: ${task.description} </div>\n    <div class="task-due-date">Task due date:</div>\n    <div class="task-priority">Task priority:</div>\n    <div class="task-notes">Task notes: ${task.notes} </div>\n    <div class="task-projectId">Project Id: ${task.projectId}</div>\n    <div class="taskID">Task Id: ${task.taskId} </div>\n    <div class="task-icon-container">\n      <div class="task-icon-edit">[edit icon]</div>\n      <div class="task-icon-trash" data-taskid="${task.taskId}">[trash icon]</div>\n    </div>\n  </div>`;\n\n      container.appendChild(divTask);\n    }\n  });\n  addEventListenerToTaskTrashIcons();\n};\n\nconst updateProjectsDisplay = () => {\n  const projectsContainer = document.getElementById("projects-container");\n  projectsContainer.innerHTML = "";\n\n  myProjects.forEach((element) => {\n    const container = document.getElementById("projects-container");\n    const divProject = document.createElement("div");\n    const divProjectText = document.createElement("div");\n    const projectName = element.title;\n    const divProjectIcon = document.createElement("div");\n    const elemId = element.id;\n\n    divProject.classList.add("project");\n    divProject.setAttribute("id", element.id); // probably??\n\n    // Handles the highlighting and unhighlighting of the new div\n    divProject.addEventListener("click", () => {\n      const divPrevSelected = document.querySelector(".highlight");\n      if (divPrevSelected) divPrevSelected.classList.remove("highlight");\n      divProject.classList.add("highlight");\n      updateTasksDisplay(myTasks);\n    });\n\n    // Styles the font of text in the div\n    divProjectText.classList.add("project-text");\n\n    // Gets user input value for project name and stores in div\'s text.\n    divProjectText.innerText = projectName;\n\n    // Creates trash icon and adds event listener\n    divProjectIcon.classList.add("project-icon");\n    divProjectIcon.innerText = "[trash-icon]";\n    // eventHandler.addEventListenerToProjectTrashIcon(divProjectIcon, elemId);\n    divProjectIcon.addEventListener("click", () => {\n      deleteProject(elemId);\n      updateProjectsDisplay();\n    });\n\n    divProject.appendChild(divProjectText);\n    divProject.appendChild(divProjectIcon);\n    container.appendChild(divProject);\n  });\n};\n\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\nconst btnAddProject = document.getElementById("btn-add-project");\nconst btnAddTask = document.getElementById("btn-add-task");\nconst btnCancelProject = document.getElementById("project-btn-cancel");\nconst btnCancelTask = document.getElementById("task-btn-cancel");\nconst btnSubmitProject = document.getElementById("btnProjectSubmit");\nconst btnSubmitTask = document.getElementById("btnTaskSubmit");\n\nbtnAddProject.addEventListener("click", () => {\n  changeDisplayType("block", ["popup-project", "page-mask-project"]);\n});\nbtnAddTask.addEventListener("click", () => {\n  changeDisplayType("block", ["formAddTask", "page-mask-task"]);\n});\nbtnCancelProject.addEventListener("click", () => {\n  changeDisplayType("none", ["popup-project", "page-mask-project"]);\n});\nbtnCancelTask.addEventListener("click", () => {\n  changeDisplayType("none", ["formAddTask", "page-mask-task"]);\n});\nbtnSubmitProject.addEventListener("click", (e) => {\n  createProject(e);\n  // Removes the popup\n  changeDisplayType("none", ["popup-project", "page-mask-project"]);\n  updateProjectsDisplay(myProjects);\n});\nbtnSubmitTask.addEventListener("click", (e) => {\n  createTask(e);\n  // removes popup\n  changeDisplayType("none", ["formAddTask", "page-mask-task"]);\n  // update dom\n  updateTasksDisplay(myTasks);\n});\n\n// const addEventListenerToTaskTrashIcons = () => {\n//   const targetDivs = document.querySelectorAll(".task-icon-trash");\n\n//   targetDivs.forEach((element) =>\n//     element.addEventListener("click", (e) => {\n//       const target = e.target;\n//       const taskId = target.getAttribute("data-taskid");\n//       appLogic.deleteTask(taskId);\n//       displayController.updateTasksDisplay(appLogic.myTasks);\n//     })\n//   );\n// };\n\n// const addEventListenerToProjectTrashIcon = (divProjectIcon, elemId) => {\n//   divProjectIcon.addEventListener("click", () => {\n//     deleteProject(elemId);\n//     updateProjectsDisplay(myProjects);\n//   });\n// };\n\n// const addEventListenerToHighlightProjectDiv = (divProject) => {\n//   divProject.addEventListener("click", () => {\n//     const divPrevSelected = document.querySelector(".highlight");\n//     if (divPrevSelected) divPrevSelected.classList.remove("highlight");\n//     divProject.classList.add("highlight");\n//     // displayController.updateTasksDisplay(appLogic.myTasks);\n//   });\n// };\n\n// return {\n//   addEventListenerToTaskTrashIcons,\n//   addEventListenerToProjectTrashIcon,\n//   addEventListenerToHighlightProjectDiv,\n// };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///794\n')}},__webpack_exports__={};__webpack_modules__[794]()})();